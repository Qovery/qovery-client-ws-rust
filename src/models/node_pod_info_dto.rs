/*
 * websocket-gateway
 *
 * Describe the websocket endpoints of Qovery
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: erebe@erebe.eu
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NodePodInfoDto {
    #[serde(rename = "cpu_milli_limit", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub cpu_milli_limit: Option<Option<i32>>,
    #[serde(rename = "cpu_milli_request", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub cpu_milli_request: Option<Option<i32>>,
    #[serde(rename = "created_at")]
    pub created_at: i64,
    #[serde(rename = "error_container_statuses")]
    pub error_container_statuses: Vec<models::NodePodErrorStatusDto>,
    #[serde(rename = "images_version")]
    pub images_version: std::collections::HashMap<String, String>,
    #[serde(rename = "memory_mib_limit", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub memory_mib_limit: Option<Option<i32>>,
    #[serde(rename = "memory_mib_request", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub memory_mib_request: Option<Option<i32>>,
    #[serde(rename = "metrics_usage")]
    pub metrics_usage: Box<models::MetricsUsageDto>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "namespace")]
    pub namespace: String,
    #[serde(rename = "qovery_service_info", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub qovery_service_info: Option<Option<Box<models::PodQoveryServiceInfoDto>>>,
    #[serde(rename = "restart_count")]
    pub restart_count: i32,
}

impl NodePodInfoDto {
    pub fn new(created_at: i64, error_container_statuses: Vec<models::NodePodErrorStatusDto>, images_version: std::collections::HashMap<String, String>, metrics_usage: models::MetricsUsageDto, name: String, namespace: String, restart_count: i32) -> NodePodInfoDto {
        NodePodInfoDto {
            cpu_milli_limit: None,
            cpu_milli_request: None,
            created_at,
            error_container_statuses,
            images_version,
            memory_mib_limit: None,
            memory_mib_request: None,
            metrics_usage: Box::new(metrics_usage),
            name,
            namespace,
            qovery_service_info: None,
            restart_count,
        }
    }
}

