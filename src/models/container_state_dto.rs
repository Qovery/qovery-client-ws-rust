/*
 * websocket-gateway
 *
 * Describe the websocket endpoints of Qovery
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: erebe@erebe.eu
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContainerStateDto {
    #[serde(rename = "started_at")]
    pub started_at: i64,
    #[serde(rename = "state")]
    pub state: models::ServiceStateDto,
    #[serde(rename = "state_message", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub state_message: Option<Option<String>>,
    #[serde(rename = "state_reason", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub state_reason: Option<Option<String>>,
}

impl ContainerStateDto {
    pub fn new(started_at: i64, state: models::ServiceStateDto) -> ContainerStateDto {
        ContainerStateDto {
            started_at,
            state,
            state_message: None,
            state_reason: None,
        }
    }
}

