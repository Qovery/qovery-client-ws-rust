/*
 * websocket-gateway
 *
 * Describe the websocket endpoints of Qovery
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: erebe@erebe.eu
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ServiceSubActionDto {
    #[serde(rename = "NONE")]
    None,
    #[serde(rename = "TERRAFORM_PLAN_ONLY")]
    TerraformPlanOnly,
    #[serde(rename = "TERRAFORM_PLAN_AND_APPLY")]
    TerraformPlanAndApply,
    #[serde(rename = "TERRAFORM_DESTROY")]
    TerraformDestroy,
    #[serde(rename = "TERRAFORM_FORCE_UNLOCK_STATE")]
    TerraformForceUnlockState,
    #[serde(rename = "TERRAFORM_MIGRATE_STATE")]
    TerraformMigrateState,

}

impl std::fmt::Display for ServiceSubActionDto {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::None => write!(f, "NONE"),
            Self::TerraformPlanOnly => write!(f, "TERRAFORM_PLAN_ONLY"),
            Self::TerraformPlanAndApply => write!(f, "TERRAFORM_PLAN_AND_APPLY"),
            Self::TerraformDestroy => write!(f, "TERRAFORM_DESTROY"),
            Self::TerraformForceUnlockState => write!(f, "TERRAFORM_FORCE_UNLOCK_STATE"),
            Self::TerraformMigrateState => write!(f, "TERRAFORM_MIGRATE_STATE"),
        }
    }
}

impl Default for ServiceSubActionDto {
    fn default() -> ServiceSubActionDto {
        Self::None
    }
}

