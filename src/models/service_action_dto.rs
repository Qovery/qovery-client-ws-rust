/*
 * websocket-gateway
 *
 * Describe the websocket endpoints of Qovery
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: erebe@erebe.eu
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ServiceActionDto {
    #[serde(rename = "DEPLOY")]
    Deploy,
    #[serde(rename = "RESTART")]
    Restart,
    #[serde(rename = "STOP")]
    Stop,
    #[serde(rename = "DELETE")]
    Delete,
    #[serde(rename = "DELETE_RESOURCES_ONLY")]
    DeleteResourcesOnly,

}

impl std::fmt::Display for ServiceActionDto {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Deploy => write!(f, "DEPLOY"),
            Self::Restart => write!(f, "RESTART"),
            Self::Stop => write!(f, "STOP"),
            Self::Delete => write!(f, "DELETE"),
            Self::DeleteResourcesOnly => write!(f, "DELETE_RESOURCES_ONLY"),
        }
    }
}

impl Default for ServiceActionDto {
    fn default() -> ServiceActionDto {
        Self::Deploy
    }
}

