/*
 * websocket-gateway
 *
 * Describe the websocket endpoints of Qovery
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: erebe@erebe.eu
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContainerStatusDto {
    #[serde(rename = "current_state", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub current_state: Option<Option<Box<models::ContainerStateDto>>>,
    #[serde(rename = "image")]
    pub image: String,
    #[serde(rename = "last_terminated_state", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub last_terminated_state: Option<Option<Box<models::ContainerStateTerminatedDto>>>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "restart_count")]
    pub restart_count: i32,
}

impl ContainerStatusDto {
    pub fn new(image: String, name: String, restart_count: i32) -> ContainerStatusDto {
        ContainerStatusDto {
            current_state: None,
            image,
            last_terminated_state: None,
            name,
            restart_count,
        }
    }
}

