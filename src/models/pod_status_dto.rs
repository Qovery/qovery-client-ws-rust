/*
 * websocket-gateway
 *
 * Describe the websocket endpoints of Qovery
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: erebe@erebe.eu
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PodStatusDto {
    #[serde(rename = "containers")]
    pub containers: Vec<models::ContainerStatusDto>,
    #[serde(rename = "last_events")]
    pub last_events: Vec<models::PodKubernetesEventDto>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "restart_count")]
    pub restart_count: i32,
    #[serde(rename = "service_version")]
    pub service_version: String,
    #[serde(rename = "started_at")]
    pub started_at: i64,
    #[serde(rename = "state")]
    pub state: models::ServiceStateDto,
    #[serde(rename = "state_message")]
    pub state_message: String,
    #[serde(rename = "state_reason")]
    pub state_reason: String,
}

impl PodStatusDto {
    pub fn new(containers: Vec<models::ContainerStatusDto>, last_events: Vec<models::PodKubernetesEventDto>, name: String, restart_count: i32, service_version: String, started_at: i64, state: models::ServiceStateDto, state_message: String, state_reason: String) -> PodStatusDto {
        PodStatusDto {
            containers,
            last_events,
            name,
            restart_count,
            service_version,
            started_at,
            state,
            state_message,
            state_reason,
        }
    }
}

