/*
 * websocket-gateway
 *
 * Describe the websocket endpoints of Qovery
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: erebe@erebe.eu
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ServiceType {
    #[serde(rename = "APPLICATION")]
    Application,
    #[serde(rename = "CONTAINER")]
    Container,
    #[serde(rename = "DATABASE")]
    Database,
    #[serde(rename = "JOB")]
    Job,
    #[serde(rename = "HELM")]
    Helm,

}

impl std::fmt::Display for ServiceType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Application => write!(f, "APPLICATION"),
            Self::Container => write!(f, "CONTAINER"),
            Self::Database => write!(f, "DATABASE"),
            Self::Job => write!(f, "JOB"),
            Self::Helm => write!(f, "HELM"),
        }
    }
}

impl Default for ServiceType {
    fn default() -> ServiceType {
        Self::Application
    }
}

