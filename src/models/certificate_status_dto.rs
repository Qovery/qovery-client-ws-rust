/*
 * websocket-gateway
 *
 * Describe the websocket endpoints of Qovery
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: erebe@erebe.eu
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CertificateStatusDto {
    #[serde(rename = "dns_names")]
    pub dns_names: Vec<String>,
    #[serde(rename = "failed_issuance_attempt_count")]
    pub failed_issuance_attempt_count: i64,
    #[serde(rename = "last_failure_issuance_time")]
    pub last_failure_issuance_time: i64,
    #[serde(rename = "not_after")]
    pub not_after: i64,
    #[serde(rename = "not_before")]
    pub not_before: i64,
    #[serde(rename = "renewal_time")]
    pub renewal_time: i64,
    #[serde(rename = "state")]
    pub state: models::ServiceStateDto,
    #[serde(rename = "state_message", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub state_message: Option<Option<String>>,
}

impl CertificateStatusDto {
    pub fn new(dns_names: Vec<String>, failed_issuance_attempt_count: i64, last_failure_issuance_time: i64, not_after: i64, not_before: i64, renewal_time: i64, state: models::ServiceStateDto) -> CertificateStatusDto {
        CertificateStatusDto {
            dns_names,
            failed_issuance_attempt_count,
            last_failure_issuance_time,
            not_after,
            not_before,
            renewal_time,
            state,
            state_message: None,
        }
    }
}

